// <auto-generated />
using System;
using ComputersAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputersAPI.Migrations
{
    [DbContext(typeof(ComputersDbContext))]
    [Migration("20250416025529_addnewcolumn")]
    partial class addnewcolumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ComputersAPI.Database.Entities.CategoryComponentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("categories_components");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.CategoryPeripheralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("categories_peripherals");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComponentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("brand");

                    b.Property<Guid>("CategoryComponentId")
                        .HasColumnType("TEXT")
                        .HasColumnName("category_component_id");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("model");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryComponentId");

                    b.ToTable("components");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerComponentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("ComponentId")
                        .HasColumnType("TEXT")
                        .HasColumnName("component_id");

                    b.Property<Guid>("ComputerId")
                        .HasColumnType("TEXT")
                        .HasColumnName("computer_id");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ComputerId");

                    b.ToTable("computers_components");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT")
                        .HasColumnName("brand");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("total_price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("computers");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerPeripheralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("ComputerId")
                        .HasColumnType("TEXT")
                        .HasColumnName("computer_id");

                    b.Property<Guid>("PeripheralId")
                        .HasColumnType("TEXT")
                        .HasColumnName("peripheral_id");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("PeripheralId");

                    b.ToTable("computers_peripherals");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.PeripheralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("brand");

                    b.Property<Guid>("CategoryPeripheralId")
                        .HasColumnType("TEXT")
                        .HasColumnName("category_peripheral_id");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("model");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryPeripheralId");

                    b.ToTable("peripherals");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComponentEntity", b =>
                {
                    b.HasOne("ComputersAPI.Database.Entities.CategoryComponentEntity", "CategoryComponent")
                        .WithMany("Components")
                        .HasForeignKey("CategoryComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryComponent");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerComponentEntity", b =>
                {
                    b.HasOne("ComputersAPI.Database.Entities.ComponentEntity", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputersAPI.Database.Entities.ComputerEntity", "Computer")
                        .WithMany("ComputerComponents")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerPeripheralEntity", b =>
                {
                    b.HasOne("ComputersAPI.Database.Entities.ComputerEntity", "Computer")
                        .WithMany("ComputerPeripherals")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputersAPI.Database.Entities.PeripheralEntity", "Peripheral")
                        .WithMany()
                        .HasForeignKey("PeripheralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("Peripheral");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.PeripheralEntity", b =>
                {
                    b.HasOne("ComputersAPI.Database.Entities.CategoryPeripheralEntity", "CategoryPeripheral")
                        .WithMany("Peripherals")
                        .HasForeignKey("CategoryPeripheralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryPeripheral");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.CategoryComponentEntity", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.CategoryPeripheralEntity", b =>
                {
                    b.Navigation("Peripherals");
                });

            modelBuilder.Entity("ComputersAPI.Database.Entities.ComputerEntity", b =>
                {
                    b.Navigation("ComputerComponents");

                    b.Navigation("ComputerPeripherals");
                });
#pragma warning restore 612, 618
        }
    }
}
